<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat</title>
    <style>

        #chat-container {
            width: 400px;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            padding: 20px;
        }

        .message-container {
            margin-bottom: 20px;
        }

        .message-text {
            background-color: #e1f5fe;
            border-radius: 10px;
            padding: 10px;
            margin-bottom: 5px;
            max-width: 70%;
            word-wrap: break-word;
        }

        .message-number {
            color: #666;
            text-align: right;
            margin-bottom: 5px;
        }

        .message-date {
            color: #999;
            font-size: 12px;
            text-align: right;
        }
    </style>
</head>
<body>
    <div id="chat-container"></div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.6/signalr.min.js"></script>
    <script>
        $(document).ready(function() {
            const connection = new signalR.HubConnectionBuilder()
                .withUrl("@Model.ConnectionString/chat")
                .configureLogging(signalR.LogLevel.Information)
                .build();

            connection.start().then(function() {
                console.log("Connected to SignalR Hub.");
            }).catch(function(err) {
                return console.error(err.toString());
            });

            connection.on("Receive", function(message) {
                const data = JSON.parse(message);
                const formattedDateTime = formatDate(data.MessageDateTime);

                const chatContainer = document.getElementById("chat-container");

                const messageContainer = document.createElement("div");
                messageContainer.classList.add("message-container");

                const messageText = document.createElement("div");
                messageText.classList.add("message-text");
                messageText.textContent = data.Message;

                const messageNumber = document.createElement("div");
                messageNumber.classList.add("message-number");
                messageNumber.textContent = `#${data.MessageNumber}`;

                const messageDate = document.createElement("div");
                messageDate.classList.add("message-date");
                messageDate.textContent = formattedDateTime;

                messageContainer.appendChild(messageDate);
                messageContainer.appendChild(messageNumber);
                messageContainer.appendChild(messageText);

                chatContainer.appendChild(messageContainer);
            });

            function formatDate(dateString) {
                const date = new Date(dateString);
                if (isNaN(date.getTime())) {
                    console.error("Invalid date format:", dateString);
                    return "Invalid Date";
                }
                const day = date.getDate().toString().padStart(2, '0');
                const month = (date.getMonth() + 1).toString().padStart(2, '0');
                const year = date.getFullYear();
                const hours = date.getHours().toString().padStart(2, '0');
                const minutes = date.getMinutes().toString().padStart(2, '0');
                const seconds = date.getSeconds().toString().padStart(2, '0');

                return `${day}.${month}.${year} ${hours}:${minutes}:${seconds}`;
            }
        });
    </script>
</body>
</html>